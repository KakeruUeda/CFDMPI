Base
{
  outputDir = "test"
  numOfOMP = 1
}

//Domain
//{
//  nx=(64,64,64)  //element size
//  Lx=(1e0,1e0,1e0)  //domain size
//  image = "input/square/image128x128x128.dat" 
//  imageEX = "input/square/image128x128x128_around.dat"
//  imageVOF = "input/square/image128x128x128_around.dat"
//  sdf = "input/square/sdf128x128x128.dat"
//}

//Domain
//{
//  nx=(240,80,80)  //element size
//  Lx=(50,15,12)  //domain size
//  image = "input/vessel/image240x80x80.dat"
//  imageEX = "input/vessel/image240x80x80_around.dat"
//  imageVOF = "input/vessel/image240x80x80_VOF.dat"
//  sdf = "input/vessel/sdf240x80x80.dat"
//}

//Domain
//{
//  nx=(240,120,120)  //element size
//  Lx=(2e0,1e0,1e0)  //domain size
//  image = "input/straightTube/image240x120x120.dat"
//  imageEX = "input/straightTube/image240x120x120_around.dat"
//  imageVOF = "input/straightTube/image240x120x120_VOF.dat"
//  sdf = "input/straightTube/sdf240x120x120_node.dat"
//}

Domain
{
  nx=(160,80,80)  //element size
  Lx=(2e0,1e0,1e0)  //domain size
  image = "input/straightTube/image160x80x80_VOF.dat"
  imageEX = "input/straightTube/image160x80x80_VOF.dat"
  imageVOF = "input/straightTube/image160x80x80_VOF.dat"
  sdf = "input/straightTube/sdf160x80x80_node.dat"
}

Boundary
{
 top{
    type = "free"
    value = (0,0,0)
 }
 bottom{
    type = "free"
    value = (0,0,0)
 }
 left{
    type = "v"
    value = (1,0,0)
 }
 right{
    type = "free"
    value = (0,0,0)
 }
 front{
    type = "free"
    value = (0,0,0)
 }
back{
    type = "free"
    value = (0,0,0)
 }
}

PysicalParameter
{
  rho = 100   // density
  mu = 0.035      // viscocity
}

BoundaryMethod
{
  boundary = "Darcy"
}


XFEMParameter
{
  sub_div = 2  
}

DarcyParameter
{
  alpha = 1e-2
  resistance = 1e2
}

BTSubDivParameter
{
  max_depth = 1
  sub_div = 6  
}

Postprocess
{
  origin = (1.0, 0.25, 0.25)
  length = (0.5, 0.5, 0.5)
  numOfVoxels1 = (3, 3, 3)
  numOfVoxels2 = (5, 5, 5)
  numOfVoxels3 = (10, 10, 10)
  numOfVoxels4 = (20, 20, 20)
  nx_opt = (32, 32, 32)
}

//Postprocess
//{
//  origin = (10, 5, 4)
//  length = (30, 5, 4)
//  numOfVoxels1 = (3, 3, 3)
//  numOfVoxels2 = (5, 5, 5)
//  numOfVoxels3 = (30, 10, 10)
//  nx_opt = (64, 16, 16)
//}